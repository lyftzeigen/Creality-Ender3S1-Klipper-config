##### Creality Ender 3 S1 Klipper Config #####

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA5
position_endstop: -10
position_min: -10
position_max: 230
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA6
position_endstop: -10
position_min: -10
position_max: 230
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 270
position_min: -5

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.6190
nozzle_diameter: 0.6
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control = pid
pid_kp = 25.268
pid_ki = 1.702
pid_kd = 93.808
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 72.339
pid_Ki: 1.581
pid_Kd: 827.381
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: PC0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[input_shaper]
# For more accurate tuning perform Tower test in [40, 50, 60] shaper_freq_x values.
shaper_freq_x: 45.0
shaper_type_x: mzv

# For more accurate tuning perform Tower test in [30, 40, 50] shaper_freq_y values.
shaper_freq_y: 38.0
shaper_type_y: mzv

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_accel_to_decel: 2000
max_z_velocity: 10
square_corner_velocity: 5.0
max_z_accel: 100

[bltouch]
sensor_pin: ^PC14 
control_pin: PC13 
x_offset: -32
y_offset: -41
z_offset: 4.2
speed: 5
samples: 1
samples_result: average
probe_with_touch_mode: true
stow_on_each_sample: false

[safe_z_home]
home_xy_position: 110,110
speed: 50
z_hop: 15
z_hop_speed: 10

[bed_mesh]
# Auto calibration
speed: 200
mesh_min: 35, 35
mesh_max: 185, 185
horizontal_move_z: 8
algorithm: bicubic
probe_count: 7, 7

[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor MKS_Pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[virtual_sdcard]
path: /home/mks/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  # Parameters
  {% set z = params.Z|default(50)|int %}                                                 ; z hop amount

  {% if printer['pause_resume'].is_paused|int == 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

    SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
    BASE_PAUSE                                                                           ; pause print
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
        G91                                                                              ; relative positioning
        G1 Z{z} F900                                                                     ; raise Z up by z hop amount
    {% else %}
        { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}
    G90                                                                                  ; absolute positioning
    G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
    SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
    M104 S0                                                                              ; turn off hotend
    SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  # Parameters
  {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

  {% if printer['pause_resume'].is_paused|int == 1 %}
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
      {% if etemp > 0 %}
          M109 S{etemp|int}                                                        ; wait for hotend to heat back up
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
      G91                                                                          ; relative positioning
      M83                                                                          ; relative extruder positioning
      {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
          G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
      {% else %}
          G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
      BASE_RESUME                                                                  ; resume print
  {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro BED_TRAMPING]
description: Perform bed tramping
gcode:
  G1 Z8 F2000
  G1 X67 Y76 F10000
  PROBE
  
  G1 Z8 F2000
  G1 X217 Y76 F10000
  PROBE
  
  G1 Z8 F2000
  G1 X217 Y226 F10000
  PROBE
  
  G1 Z8 F2000
  G1 X67 Y226 F10000
  PROBE

  G1 Z8 F2000
  G1 X142 Y151F10000
  PROBE
  
  G1 Z8 F2000
  G1 X110 Y110 F10000
